{
    "collab_server" : "",
    "contents" : "#\n# This is a Shiny web application. You can run the application by clicking\n# the 'Run App' button above.\n#\n\nlibrary(shiny)\npatient <- readRDS(\"C:/Users/lakshmi1/Documents/R/firstWebApp/patient.rds\")\n \n# Define UI for application that draws a histogram\nui <- shinyUI(fluidPage(\n\n   # Application title\n   titlePanel(\"BreastCancer Prediction\"),\n   navlistPanel(\n     tabPanel(title = \"Patient\" ,\n              fluidPage(\n                titlePanel(\"Patient Details\"),\n                p(\"Enter the patient details below and select ADD for new patient\"),\n                  fluidRow(\n                    column(4,\n                           textInput(inputId = \"name\", \n                           label = \"Name\",\n                           value = \"enter the name\")),\n                    column(4,\n                          numericInput(inputId = \"age\", \n                           label = \"Age\", \n                           value = \"Enter the age\")),\n                    column(4,\n                           textInput(inputId = \"pid\",\n                           label = \"Patient Id\", \n                           value = \"enter the id\"))\n                     ),\n                    fluidRow(\n                      column(4,actionButton(\"add\",label = \"ADD\")),\n                      column(4,actionButton(\"view\", label = \"View\"))\n                      \n                    ),\n                  hr(),\n                titlePanel(\"Patient Diagnostic Detail\"),\n                br(),\n                tableOutput(\"summary\"),\n                hr(),\n                titlePanel(\"Result\"),\n                fluidRow(\n                 \n                  column(4,verbatimTextOutput(\"result\"))\n                \n                )\n                )\n                  \n               \n     ),\n     tabPanel(title = \"Doctor\",\n              titlePanel(\"Doctor Details\"),\n              fluidPage(\n                fluidRow(\n                  column(4,\n                    selectInput(\n                    inputId = \"dname\" , \n                    label = \"select the doctor\" , \n                    choices = c(\"hii\",\"hello\"), \n                    selectize = FALSE\n                    )),\n                  column(4,\n                         textInput(\n                           inputId = \"pname\",\n                           label = \"Type the patient name\"\n                         )\n                           \n                         )\n                  )\n                ),\n                br(),\n                hr(),\n                titlePanel(\"Diagnostic details\"),\n                p(\"Enter the details of the diseases below\"),\n                fluidRow(\n                  column(3,\n                         selectInput(inputId = \"cl_thickness\",\n                                     label = \"Cell thickness\",\n                                     selectize = FALSE,\n                                     choices = c(1,2,3,4,5,6,7,8,9,10)\n                                     )),\n                  column(3,\n                         selectInput(inputId = \"cell_size\",\n                                     label = \"Cell size\",\n                                     choices = c(1,2,3,4,5,6,7,8,9,10),\n                                     selectize = FALSE\n                                     ))\n                ),\n                hr(),\n                fluidRow(\n                  column(3,\n                         selectInput(inputId = \"cell_shape\",\n                                     label = \"Cell shape\",\n                                     selectize = FALSE,\n                                     choices = c(1,2,3,4,5,6,7,8,9,10)\n                         )),\n                  column(3,\n                         selectInput(inputId = \"marg_adhesion\",\n                                     label = \"Marginal adhesion\",\n                                     choices = c(1,2,3,4,5,6,7,8,9,10),\n                                     selectize = FALSE\n                         ))\n                ),\n                hr(),\n                fluidRow(\n                  column(3,\n                         selectInput(inputId = \"epith_c_size\",\n                                     label = \"epithelial cell size\",\n                                     selectize = FALSE,\n                                     choices = c(1,2,3,4,5,6,7,8,9,10)\n                         )),\n                  column(3,\n                         selectInput(inputId = \"bare_nuclei\",\n                                     label = \"Bare nuclei\",\n                                     choices = c(1,2,3,4,5,6,7,8,9,10),\n                                     selectize = FALSE\n                         ))\n                ),\n                hr(),\n                fluidRow(\n                  column(3,\n                         selectInput(inputId = \"bl_cromatin\",\n                                     label = \"Cromatin\",\n                                     selectize = FALSE,\n                                     choices = c(1,2,3,4,5,6,7,8,9,10)\n                         )),\n                  column(3,\n                         selectInput(inputId = \"normal_nucleoli\",\n                                     label = \"Normal nucleoli\",\n                                     choices = c(1,2,3,4,5,6,7,8,9,10),\n                                     selectize = FALSE\n                         ))\n                ),\n                hr(),\n                fluidRow(\n                  column(3,\n                         selectInput(inputId = \"mitoses\",\n                                     label = \"Mtoses\",\n                                     selectize = FALSE,\n                                     choices = c(1,2,3,4,5,6,7,8,9)\n                         )),\n                  column(4,\n                         actionButton(inputId = \"result\" , label = \"View results\"))\n                ),\n                hr(),\n                fluidRow(column(5, verbatimTextOutput(\"output\")))\n              )\n      )\n    ))\n\n\n\n# Define server logic \nserver <- shinyServer(function(input, output) {\n \n observeEvent(input$add,{\n    new <- data.frame(\n      P_name = input$name , \n      P_age = as.numeric(input$age) , \n      P_id = input$pid,\n      P_class =\"\"\n            )\n    rownames(new) <- new$P_name\n    patient <- readRDS(\"C:/Users/lakshmi1/Documents/R/firstWebApp/patient.rds\")\n    patient <- rbind.data.frame(patient , new)\n    saveRDS(patient ,\"C:/Users/lakshmi1/Documents/R/firstWebApp/patient.rds\" , compress = FALSE)\n    patient <- readRDS(\"C:/Users/lakshmi1/Documents/R/firstWebApp/patient.rds\")\n    print(patient)\n    })\n \n   observeEvent(input$view,{\n     patient <- readRDS(\"C:/Users/lakshmi1/Documents/R/firstWebApp/patient.rds\")\n     \n     output$summary <- isolate(renderTable(\n     patient[input$name ,]\n     ))\n     output$result <- isolate(renderPrint(\n       as.character(patient[input$name ,4])\n     \n    ))\n  })\n   inputToPrediction <- reactive(\n     feature <- data.frame(Id = as.character(333), \n                           Cl.thickness = factor(input$cl_thickness , levels = c(1,2,3,4,5,6,7,8,9,10)),  \n                           Cell.size = factor(input$cell_size , levels = c(1,2,3,4,5,6,7,8,9,10)) , \n                           Cell.shape = factor(input$cell_shape , levels = c(1,2,3,4,5,6,7,8,9,10)),\n                           Marg.adhesion = factor(input$marg_adhesion , levels = c(1,2,3,4,5,6,7,8,9,10)),\n                          Epith.c.size = factor(input$epith_c_size, levels = c(1,2,3,4,5,6,7,8,9,10)),\n                          Bare.nuclei = factor(input$bare_nuclei , levels = c(1,2,3,4,5,6,7,8,9,10)), \n                          Bl.cromatin = factor(input$bl_cromatin , levels = c(1,2,3,4,5,6,7,8,9,10)),\n                          Normal.nucleoli = factor(input$normal_nucleoli , levels = c(1,2,3,4,5,6,7,8,9,10)),\n                          Mitoses = factor(input$mitoses ,levels = c(1,2,3,4,5,6,7,8,9)),stringsAsFactors = FALSE)\n   )\n   observeEvent(input$result,{\n     patient <- readRDS(\"C:/Users/lakshmi1/Documents/R/firstWebApp/patient.rds\")\n     \n      mod <- readRDS(\"bay.rds\")\n     \n     test <- inputToPrediction()\n    \n     final <- predict(mod , test)\n     patient[input$pname ,4] <- as.character( final)\n     print(patient[input$pname ,])\n     saveRDS(patient ,\"C:/Users/lakshmi1/Documents/R/firstWebApp/patient.rds\" , compress = FALSE)\n     \n     output$output <- renderPrint(\n       final\n     )\n  \n     \n     \n   })\n})\n\n# Run the application \nshinyApp(ui = ui, server = server)\n\n",
    "created" : 1481988720772.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "802001124",
    "id" : "DA4BB1D",
    "lastKnownWriteTime" : 1482052512,
    "last_content_update" : 1482052512376,
    "path" : "~/R/firstWebApp/app.R",
    "project_path" : "app.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}